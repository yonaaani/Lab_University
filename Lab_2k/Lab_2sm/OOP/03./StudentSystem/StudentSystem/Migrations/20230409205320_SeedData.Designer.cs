// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentSystem.Data;

namespace StudentSystem.Migrations
{
    [DbContext(typeof(StudentSystemContext))]
    [Migration("20230409205320_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StudentSystem.Data.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("ntext")
                        .IsUnicode(true);

                    b.Property<DateTime>("EndDate")
                        .HasColumnName("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar")
                        .HasMaxLength(80)
                        .IsUnicode(true);

                    b.Property<decimal>("Price")
                        .HasColumnName("Price")
                        .HasColumnType("money");

                    b.Property<DateTime>("StartDate")
                        .HasColumnName("StartDate")
                        .HasColumnType("date");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            Description = "veey interesting",
                            EndDate = new DateTime(2023, 4, 9, 0, 0, 0, 0, DateTimeKind.Local),
                            Name = "sql server",
                            Price = 567m,
                            StartDate = new DateTime(2023, 4, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            CourseId = 2,
                            Description = "very interesting",
                            EndDate = new DateTime(2023, 4, 9, 0, 0, 0, 0, DateTimeKind.Local),
                            Name = "c# code",
                            Price = 999m,
                            StartDate = new DateTime(2023, 4, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("StudentSystem.Data.Models.Homework", b =>
                {
                    b.Property<int>("HomeworkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnName("Content")
                        .HasColumnType("text")
                        .IsUnicode(false);

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnName("ContentType")
                        .HasColumnType("varchar")
                        .HasMaxLength(11)
                        .IsUnicode(false);

                    b.Property<int>("CourseId")
                        .HasColumnName("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnName("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmissionTime")
                        .HasColumnName("SubmissionTime")
                        .HasColumnType("date");

                    b.HasKey("HomeworkId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("HomeworkSubmissions");

                    b.HasData(
                        new
                        {
                            HomeworkId = 1,
                            Content = "do jsjdsj",
                            ContentType = "zip",
                            CourseId = 0,
                            StudentId = 0,
                            SubmissionTime = new DateTime(2023, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("StudentSystem.Data.Models.Resource", b =>
                {
                    b.Property<int>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnName("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<string>("ResourceType")
                        .IsRequired()
                        .HasColumnName("ResourceType")
                        .HasColumnType("varchar")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnName("Url")
                        .HasColumnType("text")
                        .IsUnicode(false);

                    b.HasKey("ResourceId");

                    b.HasIndex("CourseId");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            ResourceId = 1,
                            CourseId = 0,
                            Name = "For sql",
                            ResourceType = "other",
                            Url = "/sdjsdjkdjksdsd"
                        });
                });

            modelBuilder.Entity("StudentSystem.Data.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Birthday")
                        .HasColumnName("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar")
                        .HasMaxLength(100)
                        .IsUnicode(true);

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("PhoneNumber")
                        .HasColumnType("char")
                        .IsFixedLength(true)
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("RegisteredOn")
                        .HasColumnName("RegisteredOn")
                        .HasColumnType("date");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 4,
                            Birthday = new DateTime(1985, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Evlogi",
                            PhoneNumber = "38827834",
                            RegisteredOn = new DateTime(2023, 4, 9, 23, 53, 20, 501, DateTimeKind.Local).AddTicks(9851)
                        },
                        new
                        {
                            StudentId = 1,
                            Birthday = new DateTime(1989, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ivaylo",
                            PhoneNumber = "38827834",
                            RegisteredOn = new DateTime(2023, 4, 9, 23, 53, 20, 503, DateTimeKind.Local).AddTicks(9862)
                        },
                        new
                        {
                            StudentId = 2,
                            Birthday = new DateTime(1988, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Doncho",
                            PhoneNumber = "388000034",
                            RegisteredOn = new DateTime(2023, 4, 9, 23, 53, 20, 503, DateTimeKind.Local).AddTicks(9862)
                        },
                        new
                        {
                            StudentId = 3,
                            Birthday = new DateTime(1990, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nikolay",
                            PhoneNumber = "38834434",
                            RegisteredOn = new DateTime(2023, 4, 9, 23, 53, 20, 503, DateTimeKind.Local).AddTicks(9862)
                        });
                });

            modelBuilder.Entity("StudentSystem.Data.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("StudentSystem.Data.Models.Homework", b =>
                {
                    b.HasOne("StudentSystem.Data.Models.Course", "Course")
                        .WithMany("HomeworkSubmissions")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentSystem.Data.Models.Student", "Student")
                        .WithMany("HomeworkSubmissions")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentSystem.Data.Models.Resource", b =>
                {
                    b.HasOne("StudentSystem.Data.Models.Course", "Course")
                        .WithMany("Resources")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentSystem.Data.Models.StudentCourse", b =>
                {
                    b.HasOne("StudentSystem.Data.Models.Course", "Course")
                        .WithMany("StudentsEnrolled")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentSystem.Data.Models.Student", "Student")
                        .WithMany("CourseEnrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
